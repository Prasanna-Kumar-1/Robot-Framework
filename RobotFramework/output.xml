<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.1 on win32)" generated="20200403 21:45:48.413" rpa="false">
<suite id="s1" name="PythonWorkSpace" source="C:\Users\Yash\PythonWorkSpace">
<suite id="s1-s1" name="DictionariesDemo" source="C:\Users\Yash\PythonWorkSpace\DictionariesDemo.robot">
<test id="s1-s1-t1" name="Dictionary Testing">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>team=Sydney Tuskers</arg>
</arguments>
<assign>
<var>&amp;{dict1}</var>
</assign>
<msg timestamp="20200403 21:45:48.721" level="INFO">&amp;{dict1} = { team=Sydney Tuskers }</msg>
<status status="PASS" starttime="20200403 21:45:48.720" endtime="20200403 21:45:48.721"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>stadium=Sydney</arg>
<arg>nickname=SCG</arg>
</arguments>
<assign>
<var>&amp;{dict2}</var>
</assign>
<msg timestamp="20200403 21:45:48.722" level="INFO">&amp;{dict2} = { stadium=Sydney | nickname=SCG }</msg>
<status status="PASS" starttime="20200403 21:45:48.721" endtime="20200403 21:45:48.722"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>&amp;{dict1}</arg>
<arg>&amp;{dict2}</arg>
</arguments>
<assign>
<var>&amp;{dict}</var>
</assign>
<msg timestamp="20200403 21:45:48.723" level="INFO">&amp;{dict} = { team=Sydney Tuskers | stadium=Sydney | nickname=SCG }</msg>
<status status="PASS" starttime="20200403 21:45:48.722" endtime="20200403 21:45:48.723"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${dict} == {'team': 'Sydney Tuskers', 'stadium': 'Sydney', 'nickname': 'SCG'}</arg>
</arguments>
<status status="PASS" starttime="20200403 21:45:48.723" endtime="20200403 21:45:48.724"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${dict.stadium}</arg>
<arg>Sydney</arg>
</arguments>
<status status="PASS" starttime="20200403 21:45:48.724" endtime="20200403 21:45:48.724"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${dict.nickname}</arg>
<arg>SCG</arg>
</arguments>
<status status="PASS" starttime="20200403 21:45:48.725" endtime="20200403 21:45:48.725"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${dict.nickname}</arg>
<arg>MCG</arg>
</arguments>
<status status="PASS" starttime="20200403 21:45:48.725" endtime="20200403 21:45:48.726"></status>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${dict}</arg>
<arg>nickname</arg>
</arguments>
<status status="PASS" starttime="20200403 21:45:48.726" endtime="20200403 21:45:48.727"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${dict}</arg>
<arg>SCG</arg>
</arguments>
<status status="PASS" starttime="20200403 21:45:48.727" endtime="20200403 21:45:48.748"></status>
</kw>
<kw name="Pop From Dictionary" library="Collections">
<doc>Pops the given ``key`` from the ``dictionary`` and returns its value.</doc>
<arguments>
<arg>${dict}</arg>
<arg>nickname</arg>
</arguments>
<assign>
<var>${val}</var>
</assign>
<msg timestamp="20200403 21:45:48.749" level="INFO">${val} = SCG</msg>
<status status="PASS" starttime="20200403 21:45:48.749" endtime="20200403 21:45:48.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${dict}</arg>
</arguments>
<msg timestamp="20200403 21:45:48.751" level="INFO">{'team': 'Sydney Tuskers', 'stadium': 'Sydney'}</msg>
<status status="PASS" starttime="20200403 21:45:48.749" endtime="20200403 21:45:48.751"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>&amp;{dict}</arg>
</arguments>
<msg timestamp="20200403 21:45:48.751" level="INFO">team=Sydney Tuskers</msg>
<msg timestamp="20200403 21:45:48.752" level="INFO">stadium=Sydney</msg>
<status status="PASS" starttime="20200403 21:45:48.751" endtime="20200403 21:45:48.752"></status>
</kw>
<kw name="Log Dictionary" library="Collections">
<doc>Logs the size and contents of the ``dictionary`` using given ``level``.</doc>
<arguments>
<arg>${dict}</arg>
</arguments>
<msg timestamp="20200403 21:45:48.752" level="INFO">Dictionary size is 2 and it contains following items:
stadium: Sydney
team: Sydney Tuskers</msg>
<status status="PASS" starttime="20200403 21:45:48.752" endtime="20200403 21:45:48.752"></status>
</kw>
<status status="PASS" starttime="20200403 21:45:48.719" endtime="20200403 21:45:48.753" critical="yes"></status>
</test>
<doc>This program demonstrates using keywords from BuiltIn and Collections libraries.
Dictionary variables are created using keywords from the BuiltIn Library.
BuiltIn library also has keywords for creating dictionaries, checking length or count and
checking membership.</doc>
<status status="PASS" starttime="20200403 21:45:48.705" endtime="20200403 21:45:48.754"></status>
</suite>
<status status="PASS" starttime="20200403 21:45:48.655" endtime="20200403 21:45:48.756"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="PythonWorkSpace">PythonWorkSpace</stat>
<stat pass="1" fail="0" id="s1-s1" name="DictionariesDemo">PythonWorkSpace.DictionariesDemo</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
